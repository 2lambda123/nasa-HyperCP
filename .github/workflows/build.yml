on:
  push:
    branches:
      - workflow
#      - main
#      - dev

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:  # Required for conda environment activation
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']  # 'windows-latest',

    steps:
      - name: Get System Information
        uses: kenchan0130/actions-system-info@master
        id: system-info
      - name: Echo Host Information
        run: |
          echo "OS: ${{ runner.os }}"
          echo "CPU Core: ${{ steps.system-info.outputs.cpu-core }}"
          echo "CPU Model: ${{ steps.system-info.outputs.cpu-model }}"
          echo "Hostname: ${{ steps.system-info.outputs.hostname }}"
          echo "Kernel release: ${{ steps.system-info.outputs.kernel-release }}"
          echo "Kernel version: ${{ steps.system-info.outputs.kernel-version }}"
          echo "Name: ${{ steps.system-info.outputs.name }}"
          echo "Platform: ${{ steps.system-info.outputs.platform }}"
          echo "Release: ${{ steps.system-info.outputs.release }}"
          echo "Total memory bytes: ${{ steps.system-info.outputs.totalmem }}"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: 'workflow'  # branch to checkout

#      - name: Cache conda
#        uses: actions/cache@v2
#        env:
#          # Increase this value to reset cache if etc/example-environment.yml has not changed
#          CACHE_NUMBER: 0
#        with:
#          path: ~/conda_pkgs_dir
#          key:
#            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      - name: Setup conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          activate-environment: hypercp
          environment-file: environment.yml
#          use-only-tar-bz2: true
      - name: Install PyInstaller
        run: conda install --channel=conda-forge pyinstaller==6.0
      - name: Capture conda environment
        run: |
          conda info
          conda list

      - name: Make Bundle
        run: |
          python make.py
          echo "BUNDLE_NAME=$(ls Bundled/dist | xargs)" >> $GITHUB_ENV

      - name: Zip Bundle  # Required to speed up upload
        run: |
          zip ${{ env.BUNDLE_NAME }}.zip Bundled/dist/* -r

      - name: Upload Bundle
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: ${{ env.BUNDLE_NAME }}.zip
